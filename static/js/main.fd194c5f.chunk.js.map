{"version":3,"sources":["pages/Homepage.js","pages/ArticleDetails.js","pages/Category.js","components/SiteHeader.js","App.js","index.js"],"names":["ARTICLES","gql","Homepage","useQuery","loading","error","data","articles","map","article","className","review","title","categories","cate","name","id","body","substring","to","ARTICLE","ArticleDetails","useParams","variables","CATEGORY","Category","category","CATEGORIES","SiteHeader","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd194c5f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\n// import useFetch from \"../hooks/useFetch\";\r\n\r\nconst ARTICLES = gql`\r\n  query getArticles {\r\n    articles {\r\n      id\r\n      title\r\n      body\r\n      review\r\n      categories {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Homepage() {\r\n  // const { loading, error, data } = useFetch(\"http://localhost:1337/articles\");\r\n  const { loading, error, data } = useQuery(ARTICLES);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error...</p>;\r\n\r\n  return (\r\n    <div>\r\n      {data &&\r\n        data.articles.map((article) => (\r\n          <div key={article.id} className=\"article-card\">\r\n            <div className=\"title-wrapper\">\r\n              <div className=\"rating\">{article.review}</div>\r\n              <h2>{article.title}</h2>\r\n\r\n              <div className=\"categories-tag\">\r\n                {article.categories.map((cate) => (\r\n                  <small key={cate.id}>{cate.name}</small>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <p>{article.body.substring(0, 72)}...</p>\r\n            <Link to={`/details/${article.id}`}>Read More..</Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport Markdown from \"markdown-to-jsx\";\r\n\r\n// import useFetch from \"../hooks/useFetch\";\r\n\r\nconst ARTICLE = gql`\r\n  query getArticle($id: ID!) {\r\n    article(id: $id) {\r\n      id\r\n      title\r\n      body\r\n      review\r\n      categories {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function ArticleDetails() {\r\n  const { id } = useParams();\r\n  // const { loading, error, data } = useFetch(\r\n  //   \"http://localhost:1337/articles/\" + id\r\n  // );\r\n  const { loading, error, data } = useQuery(ARTICLE, {\r\n    variables: { id: id },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error...</p>;\r\n\r\n  return (\r\n    <div className=\"article-card\">\r\n      <div className=\"title-wrapper\">\r\n        <div className=\"rating\">{data.article.review}</div>\r\n        <h2>{data.article.title}</h2>\r\n\r\n        <div className=\"categories-tag\">\r\n          {data.article.categories.map((cate) => (\r\n            <small key={cate.id}>{cate.name}</small>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Markdown>{data.article.body}</Markdown>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst CATEGORY = gql`\r\n  query getCategory($id: ID!) {\r\n    category(id: $id) {\r\n      id\r\n      name\r\n      articles {\r\n        id\r\n        title\r\n        body\r\n        review\r\n        categories {\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Category() {\r\n  const { id } = useParams();\r\n  const { loading, error, data } = useQuery(CATEGORY, {\r\n    variables: {\r\n      id: id,\r\n    },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{data.category.name}</h2>\r\n      {data &&\r\n        data.category.articles.map((article) => (\r\n          <div key={article.id} className=\"article-card\">\r\n            <div className=\"title-wrapper\">\r\n              <div className=\"rating\">{article.review}</div>\r\n              <h2>{article.title}</h2>\r\n\r\n              <div className=\"categories-tag\">\r\n                {article.categories.map((cate) => (\r\n                  <small key={cate.id}>{cate.name}</small>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <p>{article.body.substring(0, 72)}...</p>\r\n            <Link to={`/details/${article.id}`}>Read More..</Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst CATEGORIES = gql`\r\n  query GetCategories {\r\n    categories {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SiteHeader() {\r\n  const { loading, error, data } = useQuery(CATEGORIES);\r\n\r\n  if (loading) return <p>Loading categories</p>;\r\n\r\n  return (\r\n    <div className=\"site-header\">\r\n      <Link to=\"/\">\r\n        <h1>Articles</h1>\r\n      </Link>\r\n      {error ? (\r\n        <p>Error fetching categories, Sorry!</p>\r\n      ) : (\r\n        <nav className=\"categories\">\r\n          <span className=\"\">Filter articles by category:</span>\r\n          {data.categories.map((category) => (\r\n            <Link key={category.id} to={`/category/${category.id}`}>\r\n              {category.name}\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\n// Page and Layout imports\nimport Homepage from \"./pages/Homepage\";\nimport ArticleDetails from \"./pages/ArticleDetails\";\nimport Category from \"./pages/Category\";\nimport SiteHeader from \"./components/SiteHeader\";\n\n// apollo client\nconst client = new ApolloClient({\n  uri: \"https://young-thicket-57375.herokuapp.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <Router>\n      <ApolloProvider client={client}>\n        <div className=\"App\">\n          <SiteHeader />\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route path=\"/details/:id\">\n              <ArticleDetails />\n            </Route>\n            <Route path=\"/category/:id\">\n              <Category />\n            </Route>\n          </Switch>\n        </div>\n      </ApolloProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}